// Generated by CoffeeScript 1.11.1
'use strict';
var arrayCompare, findIndex, isObject;

isObject = require('mout/lang/isObject');

findIndex = require('mout/array/findIndex');

arrayCompare = function(a, b, id) {
  var aIndex, aItem, added, bCopy, bCopyItem, bIndex, found, i, j, len, len1, missing, ref, search;
  missing = [];
  found = [];
  added = [];
  if (isObject(a)) {
    ref = a, a = ref.a, b = ref.b, id = ref.id;
  }
  bCopy = b.slice();
  for (aIndex = i = 0, len = a.length; i < len; aIndex = ++i) {
    aItem = a[aIndex];
    bIndex = -1;
    if (id) {
      search = {};
      search[id] = aItem[id];
      bIndex = findIndex(bCopy, search);
    } else {
      bIndex = bCopy.indexOf(aItem);
    }
    if (bIndex !== -1) {
      found.push({
        a: aItem,
        b: bCopy.splice(bIndex, 1)[0]
      });
    } else {
      missing.push({
        a: aItem
      });
    }
  }
  for (j = 0, len1 = bCopy.length; j < len1; j++) {
    bCopyItem = bCopy[j];
    added.push({
      b: bCopyItem
    });
  }
  return {
    found: found,
    missing: missing,
    added: added
  };
};

module.exports = arrayCompare;
